[
{
  "model": "main.post",
  "pk": 1,
  "fields": {
    "category": 2,
    "slug": "v-poiskah-samoj-moshnoj-videokarty-testiruem-a100-i-a6000-ada-na-bolshoj-yazykovoj-modeli",
    "title": "В поисках самой мощной видеокарты! Тестируем А100 и А6000 Ada на большой языковой модели",
    "content": "Большие языковые модели (LLM) произвели настоящую революцию в мире ML. Все больше компаний стремятся так или иначе извлечь из них пользу. Например, в Selectel мы оцениваем рациональность развертывания частной LLM для помощи сотрудникам техподдержки в поиске ответов на вопросы клиентов. Эту задачу мы решили совместить с тестом нового железа — видеокарты Ada с 48 ГБ RAM. В соперники ей выбрали А100 на 40 ГБ.\r\n\r\nСразу оговоримся, что нормально обучить LLM на одной GPU практически невозможно, но в качестве теста производительности такая задача вполне подходит. Под катом рассказываем, как мы проводили тест-драйв двух GPU и к каким выводам пришли.\r\nЭто дорого\r\n\r\nДля обучения больших моделей и работы с массивными датасетами нужны действительно дорогие видеокарты. Цена выбранной конфигурации часто заставляет задуматься: чуть меньше памяти и ядер замедлят работу, но будет ли это замедление настолько критичным, чтобы переплачивать миллионы каждый месяц? К тому же, несколько лишних гигабайт могут так и не пригодиться.\r\n\r\nВаши ресурсы будут простаивать\r\n\r\nВы купили одну или несколько видеокарт или арендовали готовый сервер с GPU. Конечно, вы тут же загрузили его на 100% обучением ML-моделей. Но GPU вряд ли будет работать в режиме 24/7/365, даже если решение сложных задач поставить на поток.\r\n\r\nСкорее всего, картина будет такой. Дата-сайентист забрал себе весь ресурс, но использовал GPU, скажем, четыре часа в сутки. В остальное время он обучал модель на CPU, пил кофе или решал другие задачи. Чтобы оплаченные ресурсы в это время не пропадали, их стоит отдать другим специалистам. И тут мы плавно подходим к следующему пункту.\r\n\r\nПридется учитывать нюансы шеринга GPU\r\n\r\nШеринг GPU — отличный ход, когда нужно одновременно решать несколько задач, ни одна из которых не требует всех доступных ресурсов. Берем карту, делим ее на несколько изолированных кусочков, в которых есть своя память, ядра, кэш и прочее, и отдаем по одному каждому из дата-сайентистов под его задачу. Но, конечно, не все так просто.\r\n\r\nВо-первых, каждый из способов шеринга имеет свои плюсы и минусы. Во-вторых, одна и та же технология, например MIG, может поделить А100 максимум на семь логических блоков, а А30 — максимум на четыре.",
    "author": 1,
    "date": "2024-03-12",
    "img": "image/2024/video.png"
  }
},
{
  "model": "main.post",
  "pk": 2,
  "fields": {
    "category": 6,
    "slug": "css-dlya-pechati-na-bumage",
    "title": "CSS для печати на бумаге",
    "content": "По работе я довольно часто занимаюсь созданием генераторов печати на HTML для воссоздания и замены форм, которые компания традиционно заполняла от руки на бумаге или в Excel. Это позволяет компании переходить на новые веб-инструменты, в которых форма автоматически заполняется по параметрам URL из нашей базы данных, создавая при этом тот же результат на бумаге, к которому все привыкли.\r\n\r\nВ этой статье я объясню основы CSS, управляющие внешним видом веб-страниц при печати, и дам пару советов, которые могут вам помочь в этом.",
    "author": 1,
    "date": "2024-03-12",
    "img": "image/2024/ceses.png"
  }
},
{
  "model": "main.post",
  "pk": 3,
  "fields": {
    "category": 2,
    "slug": "terminalnaya-ferma-1c-na-x2go",
    "title": "Терминальная ферма 1C на x2go",
    "content": "Итак, импортозамещение катится по стране неостановимым катком. Внесём свой посильный вклад.\r\n\r\nДля доступа пользователей к решениям на базе платформы 1С традиционно используются терминальные фермы. Это значительно облегчает администрирование, процесс обновления клиента и снижает уровень тревожности системного администратора. Классическая ферма состоит из двух брокеров, сервера баз данных и комплекта терминальных серверов, под управлением ОС Windows.\r\n\r\nНо, согласно веяниям времени, нам пришлось сделать терминальную ферму на ОС REDOS и x2go (из комплекта поставки ОС). В коде ниже нет ничего REDOS специфического (кроме dnf), рецепт подойдет для любого дистрибутива.\r\n\r\nСразу скажу, есть ограничения: можно использовать только один брокер, сессии раскидываются round-robin. Так же, вылезают некоторые баги, но техподдержка REDOS идёт на контакт и патчит их не покладая рук. Опытным путём было выяснено, что на Ubuntu x2go работает значительно более лучше, а на отечественном deb-like дистрибутиве, в данный момент, несколько хуже.\r\n\r\nИтак, вы должны развернуть нужное количество виртуалок для фермы (брокер и потребное количество терминальных серверов) и настроить на них сеть. Виртуалки надо развёртывать с графическим рабочим столом. Дальнейшее конфигурирование делаем через ansible (это у нас так, вы можете и руками).\r\n\r\nДальнейшие действия выполняются с сервера ansible.",
    "author": 1,
    "date": "2024-03-13",
    "img": "image/2024/к1.png"
  }
},
{
  "model": "main.post",
  "pk": 4,
  "fields": {
    "category": 4,
    "slug": "ii-assistent-brave-leo-dlya-android-v-detalyah",
    "title": "ИИ Ассистент Brave Leo для Android в деталях",
    "content": "Leo, наш конфиденциальный ИИ-ассистент, встроенный прямо в браузер, теперь доступен для всех устройств на Android. Начиная с версии браузера 1.63, пользователи Brave на Android могут задавать Leo вопросы, резюмировать и переводить страницы, создавать контент и многое другое как из адресной строки браузера, так и непосредственно на странице.\r\n\r\nС момента запуска на десктопах три месяца назад, Leo получил значительное распространение по всему миру. Благодаря чат-интерфейсу, встроенному прямо в браузер, и возможности выбора из нескольких языковых моделей, Leo делает взаимодействие с ИИ простым и удобным, а ответы Leo стали более точными с добавлением новых интеграций и новых моделей, таких как Mixtral.\r\n\r\nТеперь Leo доступен и пользователям с телефонами и планшетами на Android. Пользователи Brave на Android могут без проблем взаимодействовать с ИИ, не покидая безопасное пространство нашего браузера, и максимизировать свою продуктивность, где бы они ни находились.\r\n\r\nЧто умеет Leo?\r\nLeo поможет вам справиться с любым количеством задач как в контексте просматриваемых вами веб-страниц, так и вне этого контекста. Среди прочего, Leo может:\r\n\r\nРезюмировать веб-страницы и видео в реальном времени\r\n\r\nОтвечать на вопросы о контенте\r\n\r\nГенерировать письменный контент большого объёма\r\n\r\nПереводить страницы, анализировать и рерайтить их\r\n\r\nТранскрибировать видео- и аудио-контент\r\n\r\nПисать код\r\n\r\nLeo на вашем мобильном устройстве поможет резюмировать ту большую статью, которую вы всё собирались прочитать в офисе, но так и не нашли на это время; найти продукт, упомянутый в этой статье, и сравнить его с другими; найти рецепт на ужин сегодня вечером; и даже получить интересные идеи о путешествиях, чтобы сбежать от рутины. С Leo на Android вы можете максимизировать свою продуктивность, перемещаясь между домом, офисом и любым другим местом — и всё это доступно с нашими гарантиями конфиденциальности и безопасности. Вам не требуется ни вход в систему, ни регистрация: вы просто открываете браузер и начинаете конфиденциальный диалог с Leo.",
    "author": 1,
    "date": "2024-03-13",
    "img": "image/2024/к2.jpg"
  }
},
{
  "model": "main.post",
  "pk": 5,
  "fields": {
    "category": 5,
    "slug": "polza-it-sistem-v-rabote-ib-analitika",
    "title": "Польза ИT-систем в работе ИБ-аналитика",
    "content": "Зачем ИБ-шникам ИТ-системы?\r\n\r\nНередко при работе с инцидентами аналитику приходится сталкиваться с таким страшным зверем, как обогащение и поиск дополнительной информации. Любые улики, зацепки и мелочи могут помочь как в продвижении расследования, так и в принятии решения касательно действий - выполнять или нет, стоит ли результат риска и так далее.\r\n\r\nЧасто выходит так, что ИТ и ИБ-подразделения пользуются схожим инструментарием в части ИТ-систем. А иногда и не просто схожим, одинаковым. В результате чего могут возникать непримиримые противоречия и неутихающие споры, нередко заканчивающиеся чем-то вроде холодной войны между департаментами.\r\n\r\nПочему нельзя просто взять и поделиться\r\n\r\nБыл такой случай в работе, когда заказчик пришел с запросом на большую систему мониторинга активов. С представителями ИБ-подразделения очень долго обговаривались все подробности, дашборды и настройки интеграций - когда, как и для кого это дело будет обновляться, в какие процессы встроится и так далее. В конечном итоге была проделана огромная аналитическая работа, удовлетворявшая нашу команду вплоть до одного интересного момента: прямо за стеной ИБ-департамента иронично висела на стене видеопанель с точно такой же системой, почти идентичными ТЗ настройками, только... только принадлежала она ИТ-департаменту, и ходить туда и смотреть было ни в коем случае нельзя.\r\n\r\nРазграничение доступа обычно вводится не по прихоти и не от плохого настроения: задачи у подразделений могут быть действительно разными, а камнем преткновения по классике становится консистентность данных - мало ли какой департамент решит поменять модель данных, добавить новые контексты или вовсе избавиться от привычных ИТ полей.\r\n\r\nПосле первого случая следующие уже не удивляли - так, другой заказчик, выбирая все ту же CMDB, заранее предупреждал нас о том, что от ИТ будет идти другой запрос и другая система, т.к. данные в ИТ-департаменте нужны эталонные, без лишних связей и вовлеченности в инциденты, и процесс управления активами не то чтобы слабо связан с процессом управления инцидентами - эти процессы идут параллельно, не пересекаясь в рабочей жизни.\r\n\r\nТо же самое можно сказать и про мониторинг как самих средств защиты, так и инфраструктуры - нередко это вотчина только ИТ, кроме совсем уж ярких случаев контроля за машинами самой SOC-командой.\r\n\r\nНо самая большая часть споров велась и будет вестись в области компетенций и прав по проактивным действиям в ходе реагирования на инциденты. Тут уже привычные нам четыре пути и их сочетания:\r\n\r\n- система автоматизации сама управляет СЗИ и рабочими станциями;\r\n\r\n- только аналитик и сотрудник ИБ может выполнять действия на конечных устройствах;\r\n\r\n- решение о действии принимает аналитик, но выполнением занимается ИТ-отдел через систему заявок;\r\n\r\n- аналитик уполномочен лишь создавать заявки, принимает и выполняет действие только ИТ.\r\n\r\nИз которых на практике чаще всего встречаются вторые два. Получается, что в целом полномочия разделены таким образом, что иногда кому-то можно что-то подглядеть, и на этом все? Не совсем.\r\n\r\nВопреки противоречиям\r\n\r\nНа самом деле, в реальной ситуации все не настолько полярно. Когда команды начинают по-настоящему работать друг с другом и думать о том, как процессы улучшить, а не затормозить, могут происходить позитивные метаморфозы.\r\n\r\nНачиная от систем виртуализации, защиту которых может обеспечить ИБ в обмен на возможность администрирования этих самых систем с целью получения необходимой статистики и проработки рекомендаций, - к примеру, для веб-сервера компании. И заканчивая отдельными админ-правами, пусть и на чтение, для системы автоматизации или аналитика ИБ в процессе получения слепков хостов, сохранения данных об их состояниях и производительности.\r\n\r\nВ конце концов, удобные и безопасные хранилища и решения по защите БД не вышло бы реализовать на том же уровне, если бы ИБ-подразделение ничего не знало об инфраструктуре.\r\n\r\nИ наконец, если что-то касается КИИ - то без совместного использования системы управления активами и общего контекста никак не обойтись.\r\n\r\nОбмен информацией о процессах скорее несет пользу, чем вред, и ценность этой помощи куда выше предполагаемых проблем.",
    "author": 1,
    "date": "2024-03-13",
    "img": "image/2024/к3.jpg"
  }
}
]
